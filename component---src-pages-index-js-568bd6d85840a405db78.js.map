{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","_ref","data","a","createElement","columns","allMarkdownRemark","edges","map","_ref2","node","Column","key","id","style","width","Content","Header","to","fields","slug","frontmatter","title","Meta","date","Description","excerpt","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","siteTitle","react_default","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","defaultProps","Footer","marginTop","Date","getFullYear","Layout","children","_856328897","components_Header","site","siteMetadata","paddingTop"],"mappings":"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","file":"component---src-pages-index-js-568bd6d85840a405db78.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { Card, Grid } from 'semantic-ui-react';\nimport Layout from \"../components/Layout\";\nimport './index.css';\nexport default ({data}) => {\n    return (\n        <div>\n            <Layout>\n                <Grid columns={1}>\n                {data.allMarkdownRemark.edges.map(({ node }) => (\n                    <Grid.Column key={node.id}>\n                        <Card style={{ width: \"100%\" } } key={node.id}>\n                            <Card.Content>\n                                <Card.Header>\n                                    <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n                                </Card.Header>\n                                <Card.Meta>{node.frontmatter.date}</Card.Meta>\n                                <Card.Description>{node.excerpt}</Card.Description>\n                            </Card.Content>\n                        </Card>\n                    </Grid.Column>\n                ))}\n                </Grid>\n            </Layout>\n        </div>\n\n    )\n}\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#FF9800`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\";\n\nexport default () => {\n    return (\n        <footer style={{marginTop: \"10px\"}}>\n            made by chpark\n            Â© {new Date().getFullYear()}, Built with\n            {` `}Gatsby\n        </footer>\n    );\n}","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport 'semantic-ui-css/semantic.min.css'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <div>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <div>{children}</div>\n            <Footer/>\n      </div>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}